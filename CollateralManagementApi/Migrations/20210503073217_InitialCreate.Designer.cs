// <auto-generated />
using System;
using CollateralManagementApi.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CollateralManagementApi.Migrations
{
    [DbContext(typeof(CollateralDb))]
    [Migration("20210503073217_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CollateralManagementApi.Models.Collateral", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InitialAssesDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastAssessDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Collateral");
                });

            modelBuilder.Entity("CollateralManagementApi.Models.Land", b =>
                {
                    b.HasBaseType("CollateralManagementApi.Models.Collateral");

                    b.Property<double>("AreaInSqFt")
                        .HasColumnType("float");

                    b.Property<double>("CurrentPricePerSqFt")
                        .HasColumnType("float");

                    b.Property<double>("InitialPricePerSqFt")
                        .HasColumnType("float");

                    b.ToTable("Land");
                });

            modelBuilder.Entity("CollateralManagementApi.Models.RealEstate", b =>
                {
                    b.HasBaseType("CollateralManagementApi.Models.Collateral");

                    b.Property<double>("AreaInSqFt")
                        .HasColumnType("float");

                    b.Property<double>("CurrentLandPriceInSqFt")
                        .HasColumnType("float");

                    b.Property<double>("CurrentStructurePrice")
                        .HasColumnType("float");

                    b.Property<double>("InitialLandPriceInSqFt")
                        .HasColumnType("float");

                    b.Property<double>("InitialStructurePrice")
                        .HasColumnType("float");

                    b.Property<int>("YearBuilt")
                        .HasColumnType("int");

                    b.ToTable("RealEstate");
                });

            modelBuilder.Entity("CollateralManagementApi.Models.Land", b =>
                {
                    b.HasOne("CollateralManagementApi.Models.Collateral", null)
                        .WithOne()
                        .HasForeignKey("CollateralManagementApi.Models.Land", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CollateralManagementApi.Models.RealEstate", b =>
                {
                    b.HasOne("CollateralManagementApi.Models.Collateral", null)
                        .WithOne()
                        .HasForeignKey("CollateralManagementApi.Models.RealEstate", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
